#!/bin/py

#Loading Packages

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib as mpl
import matplotlib.pyplot as plt

from scipy import stats
from scipy.stats import shapiro
from scipy.stats import spearmanr
from scipy.stats import levene
from scipy.stats import pearsonr

#Loading data

PYT500 = pd.read_csv('/home/marina/Desktop/Masterarbeit/00_DATA/PYT500_phenotype_data_original_2021.txt', delimiter='\t')
pd.options.display.max_columns = None

unique = pd.read_csv('/home/marina/Desktop/Masterarbeit/00_DATA/FEATURECOUNTS_gene_UNIQUE_renamed.txt', delimiter='\t')
pd.options.display.max_columns = None

#Filtering phenofile for sequenced plots, view summary statistics

plots = unique.columns[6:].tolist()
plots_list = [name[1:] for name in plots]
plots_list = list(map(int, plots_list))

PYT500_filtered = PYT500[PYT500['plot_number'].isin(plots_list)]

plots_excluded = [2333, 2194, 2172, 2170, 2188, 2265, 2318, 2437, 2440, 2357, 2450, 2328, 2157]
plots_excluded = list(map(int, plots_excluded))
plots_unique = list(set(plots_list) - set(plots_excluded))

PYT500_unique = PYT500[PYT500['plot_number'].isin(plots_unique)]

summary = PYT500_unique[['hi', 'dm', 'rtwt', 'starch']].describe()
display(summary)

#Generating histograms for traits of interest (TOIs), Shapiro-Wilk test for normal distribution

#Starch
starch = PYT500_unique['starch']
sns.distplot(starch, bins=30, hist_kws={'alpha': 0.5, 'color': 'grey', 'edgecolor': 'black'})
plt.grid(True)
plt.xlabel('starch content [%]')
plt.ylabel('density')
plt.savefig('/home/marina/Desktop/Masterarbeit/02_FIGURES/01_PHENOTYPE_ANALYSIS/starch_histogram.svg')

starch_cleaned = starch.dropna()
stat, p_value = shapiro(starch_cleaned)
print("Shapiro-Wilk-Test:")
print("Teststatistik:", stat)
print("p-Wert:", p_value)

#Dry Matter
dm = PYT500_unique['dm']
sns.distplot(dm, bins=30, hist_kws={'alpha': 0.5, 'color': 'grey', 'edgecolor': 'black'})
plt.grid(True)
plt.xlabel('dry matter')
plt.ylabel('density')
plt.savefig('/home/marina/Desktop/Masterarbeit/02_FIGURES/01_PHENOTYPE_ANALYSIS/dm_histogram.svg')

dm_cleaned = dm.dropna()
stat, p_value = shapiro(dm_cleaned)
print("Shapiro-Wilk-Test:")
print("Teststatistik:", stat)
print("p-Wert:", p_value)

#Harvest Index
hi = PYT500_unique['hi']
sns.distplot(hi, bins=30, hist_kws={'alpha': 0.5, 'color': 'grey', 'edgecolor': 'black'})
plt.grid(True)
plt.xlabel('harvest index')
plt.ylabel('density')
plt.savefig('/home/marina/Desktop/Masterarbeit/02_FIGURES/01_PHENOTYPE_ANALYSIS/hi_histogram.svg')

hi_cleaned = hi.dropna()
stat, p_value = shapiro(hi_cleaned)
print("Shapiro-Wilk-Test:")
print("Teststatistik:", stat)
print("p-Wert:", p_value)

#Root Fresh Weight
rtwt = PYT500_unique['rtwt']
sns.distplot(rtwt, bins=30, hist_kws={'alpha': 0.5, 'color': 'grey', 'edgecolor': 'black'})
plt.grid(True)
plt.xlabel('root weight')
plt.ylabel('density')
plt.savefig('/home/marina/Desktop/Masterarbeit/02_FIGURES/01_PHENOTYPE_ANALYSIS/rtwt_histogram.svg')

rtwt_cleaned = rtwt.dropna()
stat, p_value = shapiro(rtwt_cleaned)
print("Shapiro-Wilk-Test:")
print("Teststatistik:", stat)
print("p-Wert:", p_value)

#Correlation matrix for the traits of interest

selected_columns = ['dm', 'starch', 'hi', 'rtwt']
corr_matrix_small = PYT500_filtered[selected_columns].corr()
mask = np.triu(np.ones_like(corr_matrix_small, dtype=bool))
fig, ax = plt.subplots(figsize=(20, 20))
heatmap = sns.heatmap(corr_matrix_small, mask=mask, cbar_kws={"shrink": .5}, annot=True, cmap="coolwarm", linewidths=1,
                      ax=ax, square=True, xticklabels=corr_matrix_small.columns,
                      yticklabels=corr_matrix_small.columns, annot_kws={"fontsize": 14})
ax.set_xticklabels(ax.get_xticklabels(),rotation = 45, ha="right")
heatmap.set_xticklabels(heatmap.get_xticklabels(), fontsize=18)
heatmap.set_yticklabels(heatmap.get_yticklabels(), rotation=0, ha="right", fontsize=18)
plt.savefig('/home/marina/Desktop/Masterarbeit/02_FIGURES/01_PHENOTYPE_ANALYSIS/corr_matrix_small.svg')

#Correlation starch and dry matter

sns.set_theme(style="white", palette='gray')
c1 = sns.lmplot(data=PYT500_unique, x="dm", y="starch", line_kws={"color": "blue"})
corr_coeff = PYT500_unique['starch'].corr(PYT500_unique['dm'])
plt.suptitle(f"Correlation coefficient = {corr_coeff:.2f}")
c1.set_axis_labels("dry matter", "starch content [%]")
ax = plt.gca()
ax.grid(color='gray')
plt.savefig('/home/marina/Desktop/Masterarbeit/02_FIGURES/01_PHENOTYPE_ANALYSIS/corr_starch_dm_histogram.svg')





